services:
  redis:
    image: redis:7-alpine
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build: .
    command: > 
      sh -c "sleep 5 &&
              python manage.py makemigrations &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  worker:
    build: .
    command: celery -A core worker -l INFO --concurrency=2
    env_file: .env
    depends_on:
      api:
        condition: service_started
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app

  beat:
    build: .
    command: celery -A core beat -l INFO
    env_file: .env
    depends_on:
      worker:
        condition: service_started
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app

